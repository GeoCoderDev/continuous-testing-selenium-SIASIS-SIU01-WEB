<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>SIASIS_SELENIUM</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <environment.name>dev</environment.name>
    </properties>

    <build>
        <plugins>
            <!-- Surefire Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.3</version>
                <configuration>
                    <testFailureIgnore>true</testFailureIgnore>
                    <properties>
                        <configurationParameters>
                            cucumber.junit-platform.naming-strategy=long
                        </configurationParameters>
                    </properties>
                    <systemPropertyVariables>
                        <cucumber.filter.tags>${cucumber.filter.tags}</cucumber.filter.tags>
                        <cucumber.options>${cucumber.options}</cucumber.options>
                    </systemPropertyVariables>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Tests.java</include>
                        <include>**/Test*.java</include>
                        <include>**/RunnerTest.java</include>
                    </includes>
                </configuration>
            </plugin>

            <!-- Cucumber Reporting Plugin -->
            <plugin>
                <groupId>net.masterthought</groupId>
                <artifactId>maven-cucumber-reporting</artifactId>
                <version>5.8.5</version>
                <executions>
                    <execution>
                        <id>execution</id>
                        <phase>test</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <projectName>SIASIS_SELENIUM</projectName>
                            <skip>false</skip>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <inputDirectory>${project.build.directory}/cucumber</inputDirectory>
                            <jsonFiles>
                                <param>**/*.json</param>
                            </jsonFiles>
                            <mergeFeaturesById>false</mergeFeaturesById>
                            <mergeFeaturesWithRetest>false</mergeFeaturesWithRetest>
                            <checkBuildResult>false</checkBuildResult>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Plugin para copiar reportes por entorno -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-reports-to-environment-folder</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- PRIORIDAD 1: Leer variable de entorno del SISTEMA -->
                                <property environment="env"/>

                                <!-- PRIORIDAD 2: Si no existe en sistema, leer solo ENTORNO del archivo .env -->
                                <loadproperties>
                                    <file file="${project.basedir}/.env"/>
                                    <filterchain>
                                        <linecontains>
                                            <contains value="ENTORNO="/>
                                        </linecontains>
                                    </filterchain>
                                </loadproperties>

                                <!-- Detectar entorno con PRIORIDADES -->

                                <!-- 1. Si existe ENTORNO en variables del sistema (PowerShell/CMD) -->
                                <condition property="detected.environment" value="cert">
                                    <equals arg1="${env.ENTORNO}" arg2="C"/>
                                </condition>
                                <condition property="detected.environment" value="dev">
                                    <equals arg1="${env.ENTORNO}" arg2="D"/>
                                </condition>

                                <!-- 2. Si no existe en sistema, buscar en archivo .env -->
                                <condition property="detected.environment" value="cert">
                                    <and>
                                        <not><isset property="detected.environment"/></not>
                                        <or>
                                            <equals arg1="${ENTORNO}" arg2="C"/>
                                            <equals arg1="${ENTORNO}" arg2="&quot;C&quot;"/>
                                        </or>
                                    </and>
                                </condition>
                                <condition property="detected.environment" value="dev">
                                    <and>
                                        <not><isset property="detected.environment"/></not>
                                        <or>
                                            <equals arg1="${ENTORNO}" arg2="D"/>
                                            <equals arg1="${ENTORNO}" arg2="&quot;D&quot;"/>
                                        </or>
                                    </and>
                                </condition>

                                <!-- 3. Por defecto usar dev si no se detecta nada -->
                                <condition property="detected.environment" value="dev">
                                    <not><isset property="detected.environment"/></not>
                                </condition>

                                <!-- Logs informativos SEGUROS (sin credenciales) -->
                                <echo message="🔍 DETECCIÓN DE ENTORNO:"/>
                                <echo message="   📊 Variable sistema ENTORNO: ${env.ENTORNO}"/>
                                <echo message="   📁 Variable archivo .env ENTORNO: ${ENTORNO}"/>
                                <echo message="   🎯 Entorno detectado final: ${detected.environment}"/>
                                <echo message="📋 Copiando reportes de target/ a reports/${detected.environment}/"/>

                                <!-- Crear directorio de destino -->
                                <mkdir dir="${project.basedir}/reports/${detected.environment}"/>

                                <!-- Copiar todo el contenido de target/ a reports/{entorno}/ -->
                                <copy todir="${project.basedir}/reports/${detected.environment}"
                                      preservelastmodified="true"
                                      overwrite="true"
                                      failonerror="false">
                                    <fileset dir="${project.build.directory}">
                                        <!-- Incluir los reportes importantes -->
                                        <include name="cucumber/**"/>
                                        <include name="cucumber-reports/**"/>
                                        <include name="cucumber-html-reports/**"/>
                                        <include name="surefire-reports/**"/>
                                        <include name="site/**"/>
                                        <!-- Excluir archivos temporales y compilados -->
                                        <exclude name="test-classes/**"/>
                                        <exclude name="classes/**"/>
                                        <exclude name="maven-status/**"/>
                                        <exclude name="maven-archiver/**"/>
                                        <exclude name="*.jar"/>
                                    </fileset>
                                </copy>

                                <!-- Crear un archivo de metadatos SEGURO (SIN CREDENCIALES) -->
                                <tstamp>
                                    <format property="timestamp" pattern="yyyy-MM-dd HH:mm:ss"/>
                                    <format property="timestamp.iso" pattern="yyyy-MM-dd'T'HH:mm:ss"/>
                                </tstamp>

                                <echo file="${project.basedir}/reports/${detected.environment}/test-metadata.txt"># SIASIS Test Execution Metadata (Local)
                                    # Generated: ${timestamp}

                                    ## Execution Parameters
                                    Entorno: ${detected.environment}
                                    Tags ejecutados: ${cucumber.filter.tags}
                                    Comando ejecutado: mvn clean verify
                                    Directorio origen: ${project.build.directory}

                                    ## Project Info
                                    Proyecto: ${project.name}
                                    Versión: ${project.version}
                                    Usuario: ${user.name}
                                    Sistema operativo: ${os.name}
                                    Java version: ${java.version}

                                    ## Detection Method
                                    Variable ENTORNO sistema: ${env.ENTORNO}
                                    Variable ENTORNO archivo: ${ENTORNO}
                                    Método detección: ${env.ENTORNO != null ? 'Variable sistema' : 'Archivo .env'}

                                    ## Timestamps
                                    Fecha de ejecución: ${timestamp}
                                    Fecha ISO: ${timestamp.iso}

                                    ## Security Note
                                    🔒 Las credenciales NO se almacenan en este archivo por seguridad
                                    🔒 Credenciales se manejan via variables de entorno y archivo .env
                                    🔒 Este archivo solo contiene metadatos de la ejecución
                                </echo>

                                <!-- 🚫 ELIMINADO: Ya no genera index.html automáticamente -->
                                <!-- Esto permite que mantengas tu dashboard hermoso -->

                                <!-- Logs finales -->
                                <echo message="✅ Reportes copiados exitosamente a reports/${detected.environment}/"/>
                                <echo message="🎯 Entorno final usado: ${detected.environment}"/>
                                <echo message="🔒 Metadatos seguros generados (sin credenciales)"/>
                                <echo message="💎 Dashboard personalizado mantenido intacto"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Tus dependencias existentes (sin cambios) -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>4.33.0</version>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>7.22.2</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>1.4.3</version>
        </dependency>
        <dependency>
            <groupId>net.masterthought</groupId>
            <artifactId>maven-cucumber-reporting</artifactId>
            <version>5.8.5</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.9.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>7.22.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit-platform-engine</artifactId>
            <version>7.22.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.datafaker</groupId>
            <artifactId>datafaker</artifactId>
            <version>2.4.3</version>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-engine</artifactId>
            <version>1.9.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite-api</artifactId>
            <version>1.13.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <version>6.1.0</version>
        </dependency>
        <dependency>
            <groupId>io.github.cdimascio</groupId>
            <artifactId>dotenv-java</artifactId>
            <version>3.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.17</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>2.0.17</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>