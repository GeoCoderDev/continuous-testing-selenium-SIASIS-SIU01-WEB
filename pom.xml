<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>SIASIS_SELENIUM</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <environment.name>dev</environment.name>
    </properties>

    <build>
        <plugins>
            <!-- Surefire Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.3</version>
                <configuration>
                    <testFailureIgnore>true</testFailureIgnore>
                    <properties>
                        <configurationParameters>
                            cucumber.junit-platform.naming-strategy=long
                        </configurationParameters>
                    </properties>
                    <systemPropertyVariables>
                        <cucumber.filter.tags>${cucumber.filter.tags}</cucumber.filter.tags>
                        <cucumber.options>${cucumber.options}</cucumber.options>
                    </systemPropertyVariables>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Tests.java</include>
                        <include>**/Test*.java</include>
                        <include>**/RunnerTest.java</include>
                    </includes>
                </configuration>
            </plugin>

            <!-- Cucumber Reporting Plugin -->
            <plugin>
                <groupId>net.masterthought</groupId>
                <artifactId>maven-cucumber-reporting</artifactId>
                <version>5.8.5</version>
                <executions>
                    <execution>
                        <id>execution</id>
                        <phase>test</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <projectName>SIASIS_SELENIUM</projectName>
                            <skip>false</skip>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <inputDirectory>${project.build.directory}/cucumber</inputDirectory>
                            <jsonFiles>
                                <param>**/*.json</param>
                            </jsonFiles>
                            <mergeFeaturesById>false</mergeFeaturesById>
                            <mergeFeaturesWithRetest>false</mergeFeaturesWithRetest>
                            <checkBuildResult>false</checkBuildResult>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Plugin para copiar reportes por entorno -->

            <!-- REEMPLAZA COMPLETAMENTE el plugin maven-antrun-plugin en tu pom.xml con esto: -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-reports-to-environment-folder</id>
                        <phase>test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- PRIORIDAD 1: Leer variable de entorno del SISTEMA -->
                                <property environment="env"/>

                                <!-- PRIORIDAD 2: Si no existe en sistema, leer solo ENTORNO del archivo .env -->
                                <loadproperties>
                                    <file file="${project.basedir}/.env"/>
                                    <filterchain>
                                        <linecontains>
                                            <contains value="ENTORNO="/>
                                        </linecontains>
                                    </filterchain>
                                </loadproperties>

                                <!-- Detectar entorno con PRIORIDADES -->

                                <!-- 1. Si existe ENTORNO en variables del sistema (PowerShell/CMD) -->
                                <condition property="detected.environment" value="cert">
                                    <equals arg1="${env.ENTORNO}" arg2="C"/>
                                </condition>
                                <condition property="detected.environment" value="dev">
                                    <equals arg1="${env.ENTORNO}" arg2="D"/>
                                </condition>

                                <!-- 2. Si no existe en sistema, buscar en archivo .env -->
                                <condition property="detected.environment" value="cert">
                                    <and>
                                        <not><isset property="detected.environment"/></not>
                                        <or>
                                            <equals arg1="${ENTORNO}" arg2="C"/>
                                            <equals arg1="${ENTORNO}" arg2="&quot;C&quot;"/>
                                        </or>
                                    </and>
                                </condition>
                                <condition property="detected.environment" value="dev">
                                    <and>
                                        <not><isset property="detected.environment"/></not>
                                        <or>
                                            <equals arg1="${ENTORNO}" arg2="D"/>
                                            <equals arg1="${ENTORNO}" arg2="&quot;D&quot;"/>
                                        </or>
                                    </and>
                                </condition>

                                <!-- 3. Por defecto usar dev si no se detecta nada -->
                                <condition property="detected.environment" value="dev">
                                    <not><isset property="detected.environment"/></not>
                                </condition>

                                <!-- Logs informativos SEGUROS (sin credenciales) -->
                                <echo message="🔍 DETECCIÓN DE ENTORNO:"/>
                                <echo message="   📊 Variable sistema ENTORNO: ${env.ENTORNO}"/>
                                <echo message="   📁 Variable archivo .env ENTORNO: ${ENTORNO}"/>
                                <echo message="   🎯 Entorno detectado final: ${detected.environment}"/>
                                <echo message="📋 Copiando reportes de target/ a reports/${detected.environment}/"/>

                                <!-- Crear directorio de destino -->
                                <mkdir dir="${project.basedir}/reports/${detected.environment}"/>

                                <!-- Copiar todo el contenido de target/ a reports/{entorno}/ -->
                                <copy todir="${project.basedir}/reports/${detected.environment}"
                                      preservelastmodified="true"
                                      overwrite="true"
                                      failonerror="false">
                                    <fileset dir="${project.build.directory}">
                                        <!-- Incluir los reportes importantes -->
                                        <include name="cucumber/**"/>
                                        <include name="cucumber-reports/**"/>
                                        <include name="cucumber-html-reports/**"/>
                                        <include name="surefire-reports/**"/>
                                        <include name="site/**"/>
                                        <!-- Excluir archivos temporales y compilados -->
                                        <exclude name="test-classes/**"/>
                                        <exclude name="classes/**"/>
                                        <exclude name="maven-status/**"/>
                                        <exclude name="maven-archiver/**"/>
                                        <exclude name="*.jar"/>
                                    </fileset>
                                </copy>

                                <!-- Crear un archivo de metadatos SEGURO -->
                                <tstamp>
                                    <format property="timestamp" pattern="yyyy-MM-dd HH:mm:ss"/>
                                    <format property="timestamp.iso" pattern="yyyy-MM-dd'T'HH:mm:ss"/>
                                </tstamp>

                                <echo file="${project.basedir}/reports/${detected.environment}/test-metadata.txt"># SIASIS Test Execution Metadata (Local)
                                    # Generated: ${timestamp}

                                    ## Execution Parameters
                                    Entorno: ${detected.environment}
                                    Tags ejecutados: ${cucumber.filter.tags}
                                    Comando ejecutado: mvn clean verify
                                    Directorio origen: ${project.build.directory}

                                    ## Project Info
                                    Proyecto: ${project.name}
                                    Versión: ${project.version}
                                    Usuario: ${user.name}
                                    Sistema operativo: ${os.name}
                                    Java version: ${java.version}

                                    ## Detection Method
                                    Variable ENTORNO sistema: ${env.ENTORNO}
                                    Variable ENTORNO archivo: ${ENTORNO}
                                    Método detección: ${env.ENTORNO != null ? 'Variable sistema' : 'Archivo .env'}

                                    ## Timestamps
                                    Fecha de ejecución: ${timestamp}
                                    Fecha ISO: ${timestamp.iso}

                                    ## Security Note
                                    🔒 Las credenciales NO se almacenan en este archivo por seguridad
                                    🔒 Credenciales se manejan via variables de entorno y archivo .env
                                    🔒 Este archivo solo contiene metadatos de la ejecución
                                </echo>

                                <!-- Crear dashboard básico SEGURO -->
                                <echo file="${project.basedir}/index.html">&lt;!DOCTYPE html&gt;
                                    &lt;html lang="es"&gt;
                                    &lt;head&gt;
                                    &lt;meta charset="UTF-8"&gt;
                                    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
                                    &lt;title&gt;🚀 SIASIS Testing Dashboard&lt;/title&gt;
                                    &lt;style&gt;
                                    body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; margin: 40px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); min-height: 100vh; }
                                    .container { background: white; padding: 30px; border-radius: 15px; max-width: 900px; margin: 0 auto; box-shadow: 0 10px 30px rgba(0,0,0,0.3); }
                                    h1 { color: #2c3e50; text-align: center; margin-bottom: 30px; }
                                    .environment { margin: 20px 0; padding: 20px; border-radius: 10px; transition: transform 0.3s ease; }
                                    .environment:hover { transform: translateY(-5px); }
                                    .dev { background: #d4edda; border-left: 4px solid #28a745; }
                                    .cert { background: #fff3cd; border-left: 4px solid #ffc107; }
                                    .target { background: #d1ecf1; border-left: 4px solid #17a2b8; }
                                    .current { background: #e7f3ff; border: 3px solid #007bff; box-shadow: 0 5px 15px rgba(0,123,255,0.3); }
                                    .links { display: flex; gap: 10px; margin-top: 15px; flex-wrap: wrap; }
                                    .link { padding: 10px 15px; background: #007bff; color: white; text-decoration: none; border-radius: 5px; transition: all 0.3s ease; }
                                    .link:hover { background: #0056b3; transform: translateY(-2px); }
                                    .current-badge { background: #28a745; color: white; padding: 5px 10px; border-radius: 5px; font-size: 0.9em; margin-left: 10px; }
                                    .status-info { background: #f8f9fa; padding: 15px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #6c757d; }
                                    .commands { background: #2c3e50; color: white; padding: 15px; border-radius: 8px; margin: 20px 0; }
                                    .commands code { background: #34495e; padding: 2px 5px; border-radius: 3px; }
                                    .security-note { background: #d4edda; border: 1px solid #c3e6cb; color: #155724; padding: 15px; border-radius: 8px; margin: 20px 0; }
                                    &lt;/style&gt;
                                    &lt;/head&gt;
                                    &lt;body&gt;
                                    &lt;div class="container"&gt;
                                    &lt;h1&gt;🚀 SIASIS Testing Dashboard&lt;/h1&gt;
                                    &lt;p&gt;&lt;strong&gt;Sistema de Control de Asistencia - I.E. 20935 Asunción 8&lt;/strong&gt;&lt;/p&gt;

                                    &lt;div class="status-info"&gt;
                                    &lt;strong&gt;📊 Último reporte generado:&lt;/strong&gt; ${timestamp}&lt;br&gt;
                                    &lt;strong&gt;🎯 Entorno actual:&lt;/strong&gt; &lt;span class="current-badge"&gt;${detected.environment.toUpperCase()}&lt;/span&gt;
                                    &lt;/div&gt;

                                    &lt;div class="security-note"&gt;
                                    &lt;strong&gt;🔒 Seguridad:&lt;/strong&gt; Las credenciales se manejan de forma segura via variables de entorno. No se almacenan en archivos de reportes.
                                    &lt;/div&gt;

                                    &lt;div class="environment dev ${detected.environment == 'dev' ? 'current' : ''}"&gt;
                                    &lt;h3&gt;🛠️ Entorno de Desarrollo (DEV) ${detected.environment == 'dev' ? '&lt;span class="current-badge"&gt;ACTUAL&lt;/span&gt;' : ''}&lt;/h3&gt;
                                    &lt;div class="links"&gt;
                                    &lt;a href="reports/dev/cucumber-reports/index.html" class="link"&gt;📊 Cucumber Reports&lt;/a&gt;
                                    &lt;a href="reports/dev/surefire-reports/" class="link"&gt;🧪 Surefire Reports&lt;/a&gt;
                                    &lt;a href="reports/dev/test-metadata.txt" class="link"&gt;ℹ️ Metadatos&lt;/a&gt;
                                    &lt;/div&gt;
                                    &lt;/div&gt;

                                    &lt;div class="environment cert ${detected.environment == 'cert' ? 'current' : ''}"&gt;
                                    &lt;h3&gt;🎯 Entorno de Certificación (CERT) ${detected.environment == 'cert' ? '&lt;span class="current-badge"&gt;ACTUAL&lt;/span&gt;' : ''}&lt;/h3&gt;
                                    &lt;div class="links"&gt;
                                    &lt;a href="reports/cert/cucumber-reports/index.html" class="link"&gt;📊 Cucumber Reports&lt;/a&gt;
                                    &lt;a href="reports/cert/surefire-reports/" class="link"&gt;🧪 Surefire Reports&lt;/a&gt;
                                    &lt;a href="reports/cert/test-metadata.txt" class="link"&gt;ℹ️ Metadatos&lt;/a&gt;
                                    &lt;/div&gt;
                                    &lt;/div&gt;

                                    &lt;div class="environment target"&gt;
                                    &lt;h3&gt;📁 Target Original&lt;/h3&gt;
                                    &lt;p&gt;Reportes estándar de Maven (siempre disponibles)&lt;/p&gt;
                                    &lt;div class="links"&gt;
                                    &lt;a href="target/cucumber-reports/index.html" class="link"&gt;📊 Cucumber Reports&lt;/a&gt;
                                    &lt;a href="target/surefire-reports/" class="link"&gt;🧪 Surefire Reports&lt;/a&gt;
                                    &lt;/div&gt;
                                    &lt;/div&gt;

                                    &lt;div class="commands"&gt;
                                    &lt;h4&gt;💻 Comandos para ejecutar tests:&lt;/h4&gt;
                                    &lt;p&gt;&lt;strong&gt;DEV:&lt;/strong&gt; &lt;code&gt;$env:ENTORNO="D"; mvn clean verify&lt;/code&gt;&lt;/p&gt;
                                    &lt;p&gt;&lt;strong&gt;CERT:&lt;/strong&gt; &lt;code&gt;$env:ENTORNO="C"; mvn clean verify&lt;/code&gt;&lt;/p&gt;
                                    &lt;p&gt;&lt;strong&gt;Con tags:&lt;/strong&gt; &lt;code&gt;$env:ENTORNO="C"; mvn clean verify "-Dcucumber.filter.tags=@Login"&lt;/code&gt;&lt;/p&gt;
                                    &lt;/div&gt;
                                    &lt;/div&gt;
                                    &lt;/body&gt;
                                    &lt;/html&gt;</echo>

                                <!-- Logs finales -->
                                <echo message="✅ Reportes copiados exitosamente a reports/${detected.environment}/"/>
                                <echo message="🌐 Dashboard generado: index.html"/>
                                <echo message="🎯 Entorno final usado: ${detected.environment}"/>
                                <echo message="🔒 Metadatos seguros generados (sin credenciales)"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>

    <dependencies>
        <!-- Tus dependencias existentes (sin cambios) -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>4.33.0</version>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>7.22.2</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>1.4.3</version>
        </dependency>
        <dependency>
            <groupId>net.masterthought</groupId>
            <artifactId>maven-cucumber-reporting</artifactId>
            <version>5.8.5</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.9.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>7.22.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit-platform-engine</artifactId>
            <version>7.22.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.datafaker</groupId>
            <artifactId>datafaker</artifactId>
            <version>2.4.3</version>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-engine</artifactId>
            <version>1.9.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite-api</artifactId>
            <version>1.13.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <version>6.1.0</version>
        </dependency>
        <dependency>
            <groupId>io.github.cdimascio</groupId>
            <artifactId>dotenv-java</artifactId>
            <version>3.2.0</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.17</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>2.0.17</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>